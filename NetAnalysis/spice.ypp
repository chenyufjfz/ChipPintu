%{
#include <stdio.h>
int yylex(void);
void yyerror(const char *);
%}

%token SUBCKT_Action ENDS_Action RLC_Device K_Device IV_Source GE_Source FH_Source X_Device
%token S_Device W_Device MODEL_Action Diode_Device Bipolar_Device JFET_Device MOSFET_Device
%token MESFET_Device End Digits Floats Function TC_Special OFF_Special ON_Special IC_Special
%token TEMP_Special MOS_Special V_Source L_Device Identifier MODEL_Spec Nodes Eol

%union {
	char * str;
}

%type <str> RLC_Device K_Device IV_Source GE_Source FH_Source X_Device S_Device
%type <str> W_Device Diode_Device Bipolar_Device JFET_Device MOSFET_Device
%type <str> MESFET_Device Digits L_Device Identifier Nodes Eol
%type <str> InputList InputLine DefinitionLine Node
%type <str> FH_Node NodeList Subcircuit BeginSub
%type <str> SubBody EndSub SubBodyLine

%%
Input:
	InputList End
	| InputList
;
InputList: /* nothing */ { $$ = NULL; }
  	| InputLine InputList
;  
InputLine:
	Subcircuit
  	| DefinitionLine
  	| Eol
;
DefinitionLine:
	RLC_Device Node Node Value PairList Eol
	| RLC_Device Node Node Value MODEL_Ident PairList Eol
	| RLC_Device Node Node MODEL_Ident Value Eol
	| RLC_Device Node Node MODEL_Ident PairList Eol
	| RLC_Device Node Node Value TC_Value_1 Eol
	| RLC_Device Node Node Value TC_Value_2 Eol 
	| K_Device L_Device L_Device Value Eol
	| IV_Source Node Node ExprList Eol
	| IV_Source Node Node Value ExprList Eol
	| GE_Source Node Node Eol
	| GE_Source Node Node Node Node Value Eol
	| FH_Source FH_Node FH_Node Eol
	| FH_Source FH_Node FH_Node V_Source Value Eol
	| MODEL_Action MODEL_Ident MODEL_Spec MODEL_List Eol {$$ = NULL;}
	| Diode_Device Node Node MODEL_Ident DEVICE_List_1
	| JFET_Device Node Node Node MODEL_Ident DEVICE_List_2
	| Bipolar_Device Node Node Node MODEL_Ident DEVICE_List_2 
	| Bipolar_Device Node Node Node Node MODEL_Ident DEVICE_List_2
	| MOSFET_Device Node Node Node Node MODEL_Ident DEVICE_List_3 {
		printf("%s, n1=%s, n2=%s, n3=%s, n4=%s\n", $1, $2, $3, $4, $5);
		free($1);
		free($2);
		free($3);
		free($4);
		free($5);
	}
	| MESFET_Device Node Node Node MODEL_Ident DEVICE_List_2
	| X_Device NodeList Eol
	| S_Device Node Node Node Node MODEL_Ident SWITCH_State Eol
	| W_Device Node Node V_Source MODEL_Ident SWITCH_State Eol
;

Value: Digits | 
	Floats
;

Node: Digits { $$ = $1; } 
	| Nodes { $$ = $1; }
	| Identifier {$$ = $1; }
;

PairList: /* nothing */
	| Identifier Value PairList
;
MODEL_Ident: Identifier 
	| MODEL_Spec
;
TC_Value_1: TC_Special Value;
TC_Value_2: TC_Special Value Value;
ExprList: /* nothing */
	| Expr ExprList
;
Expr: Function ValueList
ValueList: /* nothing */
	| Value ValueList
;
FH_Node: Node { $$ = $1; }
	| V_Source { $$ = NULL; }
;
DEVICE_List_1: /* nothing */
	| TEMP_Special Value DEVICE_List_1
	| Value DEVICE_List_1
	| OFF_Special DEVICE_List_1
	| IC_Condition_1 DEVICE_List_1
;
DEVICE_List_2: /* nothing */
	| TEMP_Special Value DEVICE_List_2
	| Value DEVICE_List_2
	| OFF_Special DEVICE_List_2
	| IC_Condition_2 DEVICE_List_2
	| MOS_Special Value DEVICE_List_2
;
DEVICE_List_3: /* nothing */
	| TEMP_Special Value DEVICE_List_3
	| MOS_Special Value DEVICE_List_3
	| Value DEVICE_List_3
	| OFF_Special DEVICE_List_3
	| IC_Condition_3 DEVICE_List_3
;  
IC_Condition_1: IC_Special Value;
IC_Condition_2: IC_Special Value Value;
IC_Condition_3: IC_Special Value Value Value;
NodeList: /* nothing */ { $$ = NULL; }
	| Node NodeList
;
SWITCH_State: /* nothing */
	| ON_Special
	| OFF_Special
;	
MODEL_List: /* nothing */
	| Identifier Value MODEL_List
;
Subcircuit:	BeginSub SubBody EndSub;
BeginSub: SUBCKT_Action Identifier NodeList Eol { 
	$$ = $2; 
	printf("Subckt %s", $2);
	}
;	
SubBody: /* nothing */ { $$ = NULL; }
	| SubBodyLine SubBody 
;
SubBodyLine:
  DefinitionLine
  | Subcircuit
  | Eol
;
EndSub:
    ENDS_Action { $$ = NULL; }
  | ENDS_Action Identifier { $$ = NULL; }
;
%%

void yyerror(const char *s) {
    fprintf(stderr, "Error:%s\n", s);
}